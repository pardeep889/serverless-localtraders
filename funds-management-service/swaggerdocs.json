{
    "openapi": "3.0.2",
    "info": {
        "title": "LocalTraders API's"
    },
    "servers": [
        {
            "url":"https://8vhkfqahgf.execute-api.us-east-1.amazonaws.com",
            "description":"asset"
        },
        {
            "url" :" https://y13ltsm0w7.execute-api.us-east-1.amazonaws.com",
            "description":"wallet"
        },
        {
            "url":"https://q3j8v1plql.execute-api.us-east-1.amazonaws.com",
            "description" :"vendor"
        },
        {
            "url":"https://yjfcum4617.execute-api.us-east-1.amazonaws.com/dev",
            "description":"notification "
        },
        {
            "url":"https://0mtdc4kfg5.execute-api.us-east-1.amazonaws.com",
            "description":"trade "
        },
        {
            "url": "https://3p4sfu8qxh.execute-api.us-east-1.amazonaws.com",
            "description": "admin "

        },
        {
            "url": "https://8gtef0v2qd.execute-api.us-east-1.amazonaws.com",
            "description": "user "
        }
    
    ],
    "tags": [
 
        {
            "name": "user"
        },
        {
            "name": "admin"
        },
        {
            "name": "trade"
        },
        {
            "name": "notification"
        },
        {
            "name": "vendor"
        },
        {
            "name": "wallet"
        },
        {
            "name":"asset"
        }
    ],
    "paths": {

        "/user": {
            "post": {
                "tags": [
                    "user"
                ],
                "description": "register user",
                "operationId": "createUser",
                "requestBody": {
                    "description": "Created user object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users/login": {
            "post": {
                "tags": [
                    "user"
                ],
                "description": "Logs user into the system",
                "operationId": "loginUser",
                "parameters": [],
                "requestBody": {
                    "description": "login user object",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserLogin"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json":{}
                        }
                    },
                    "400": {
                        "description": "Invalid email/password supplied"
                    },
                    "404" :{
                        "description":"email not found"
                    }
                }
            }
        },
        "/user/email/verify/{token}": {
            "get": {
                "tags": [
                    "user"
                ],
                "description": "Verify user email with token which is send to your email",
                "operationId": "verifyUserEmail",
                "parameters": [
                    {
                        "name": "token",
                        "in": "path",
                        "description": "extract the token from the link which is send to your email this token is valid for 5 min.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid token"
                    },
                    "404": {
                        "description": "something went wrong"
                    }
                }
            }
        },
        "/user/reset-password/{email}": {
            "post": {
                "tags": [
                    "user"
                ],
                "description": "send the reset-password link to the user email.",
                "operationId": "reset-password",
                "parameters": [
                    {
                        "name": "email",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "reset-password link sent successfully"
                    },
                    "400": {
                        "description": "reset-password link not sent"
                    },
                    "404": {
                        "description": "User with this email not exists"
                    }
                }
            }
        },
        "/user/reset-password-confirm/{token}": {
            "post": {
                "tags": [
                    "user"
                ],
                "description": "send the reset-password link to the user email.",
                "operationId": "reset-password-confirm",
                "parameters": [
                    {
                        "name": "token",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "new password",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                          
                                    "newPassword": {
                                        "type": "string",
                                        "example": "123456"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "reset-password  successfully"
                    },
                    "400": {
                        "description": "Unable to reset password. something went wrong"
                    },
                    "404": {
                        "description": "User with this email not exists"
                    }
                }
            }
        },
        "/user/change-password": {
            "post": {
                "tags": [
                    "user"
                ],
                "description": "send the reset-password link to the user email.",
                "operationId": "change-password",
                "requestBody": {
                    "description": "change password , old password should be matched",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/changePassword"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password changed successfully"
                    },
                    "400": {
                        "description": "Unable to change password. something went wrong"
                    },
                    "404": {
                        "description": "User with this email not exists"
                    }
                }
            }
        },
        "/verify-user/{token}": {
            "get": {
                "tags": [
                    "user"
                ],
                "description": "Verify user with token.",
                "operationId": "verifyUserWithToken",
                "parameters": [
                    {
                        "name": "token",
                        "in": "path",
                        "description": "This token is check if user is login or not.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "user verified"
                    },
                    "400": {
                        "description": "Invalid token"
                    },
                    "404": {
                        "description": "something went wrong"
                    }
                }
            }
        },
        "/admin": {
            "post": {
                "tags": [
                    "admin"
                ],
                "description": "register admin",
                "operationId": "createAdmin",
                "requestBody": {
                    "description": "Create admin object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json":{}
                        }
                    },
                    "400": {
                        "description": "User with this email already exists"
                    },
                    "404" :{
                        "description":"something went wrong"
                    }
                }
            }
        },
        "/admin/login": {
            "post": {
                "tags": [
                    "admin"
                ],
                "description": "Logs user into the system",
                "operationId": "loginUser",
                "parameters": [],
                "requestBody": {
                    "description": "login user object",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserLogin"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json":{}
                        }
                    },
                    "400": {
                        "description": "Invalid email/password supplied"
                    },
                    "404" :{
                        "description":"email not found"
                    }
                }
            }
        },
        "/admin/payment-category": {
            "post": {
                "tags": [
                    "admin"
                ],
                "description": "add payment category",
                "operationId": "addPaymentCategory",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PaymentCategory"
                            }
                        }
                    }
                },
                "responses": {
        
                    "200": {
                        "description": "Payment method added successfully"
                    },
                    "400": {
                        "description": "something went wrong"
                    }
                },
                "security": [
                    {
                        "adminToken": []
                    }
                  ]
            },
            "get": {
                "tags": [
                    "admin"
                ],
                "description": "List all service provider",
                "operationId": "listPaymentMethods",
                "responses": {
        
                    "200": {
                        "description": "request successfull"
                    },
                    "400": {
                        "description": "something went wrong"
                    }
                }
            }
        },
        "/admin/service-provider": {
            "post": {
                "tags": [
                    "admin"
                ],
                "description": "add service provider to payment category",
                "operationId": "addServiceProvider",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ServiceProvider"
                            }
                        }
                    }
                },
                "responses": {
        
                    "200": {
                        "description": "PaymentService Provider method added successfully"
                    },
                    "400": {
                        "description": "something went wrong"
                    },
                    "404" :{
                        "description":"email not found"
                    },
                    "401" :{
                        "description":"access forbidden"
                    }
                },
                "security": [
                    {
                        "adminToken": []
                    }
                  ]
            },
            "get": {
                "tags": [
                    "admin"
                ],
                "description": "List all service provider",
                "operationId": "listServiceProvider",
                "responses": {
        
                    "200": {
                        "description": "request successfull"
                    },
                    "400": {
                        "description": "something went wrong"
                    }
                }
            }
        },
       
        "/admin/list-users": {
            "get": {
                "tags": [
                    "admin"
                ],
                "description": "list of users",
                "operationId": "listOfUsers",
                "requestBody": {},
                "responses": {
        
                    "200": {
                        "description": "request successfull"
                    },
                    "400": {
                        "description": "Unable to get users. something went wrong"
                    },
                    "401" :{
                        "description":"access forbidden"
                    }
                }
            }
        },
        "/admin/trade": {
            "post": {
                "tags": [
                    "admin"
                ],
                "description": "create trade",
                "operationId": "createTrade",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Trade"
                            }
                        }
                    }
                },
                "responses": {
        
                    "200": {
                        "description": "Trade added successfully"
                    },
                    "400": {
                        "description": "something went wrong"
                    },
                    "401" :{
                        "description":"access forbidden"
                    }
                },
                "security": [
                    {
                        "adminToken": []
                    }
                  ]
            }
        },
         "/alltrade": {
            "get": {
                "tags": [
                    "trade"
                ],
                "description": "list all trades",
                "operationId": "listOfUsers",
                "requestBody": {},
                "responses": {
        
                    "200": {
                        "description": "request successfull"
                    },
                    "400": {
                        "description": "Unable to get trades. something went wrong"
                    }
                }
            }
        },
        "/trade/{id}": {
            "get": {
                "tags": [
                    "trade"
                ],
                "description": "get single trade",
                "operationId": "getTrade",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "request successful"
                    },
                    "400": {
                        "description": "Unable to retrieve trade/Missing id path param"
                    },
                    "404": {
                        "description": "something went wrong"
                    }
                }
            }
        },
        "/trade": {
            "get": {
                "tags": [
                    "trade"
                ],
                "description": "list all trades with query params",
                "operationId": "listTade",
                "requestBody": {},
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "default": "sell",
                            "enum": [
                                "sell",
                                "buy"
                            ]
                        }
                    },
                    {
                        "name": "paymentMethodCategory",
                        "in": "query",
                        "required":false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "location",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "paymentMethod",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "currency",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "priceRange",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
        
                    "200": {
                        "description": "request successfull"
                    },
                    "400": {
                        "description": "Unable to get trades. something went wrong"
                    }
                }
            }
        },
        "/currencies": {
            "get": {
                "tags": [
                    "trade"
                ],
                "description": "list of tokens",
                "operationId": "listToken",
                "requestBody": {},
                "responses": {
        
                    "200": {
                        "description": "request successfull"
                    },
                    "400": {
                        "description": "Unable to retrieve currencies. something went wrong"
                    }
                }
            }
        },
        "/send-sms": {
            "post": {
                "tags": [
                    "notification"
                ],
                "description": "send sms to the user",
                "operationId": "sendSMS",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Notification"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "text has been sent"
                    },
                    "400": {
                        "description": "text failed to send"
                    }
                }
            }
        },
        "/verify-sms": {
            "post": {
                "tags": [
                    "notification"
                ],
                "description": "verify the sms",
                "operationId": "verifySMS",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VerifyOTP"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "phone number is verified"
                    },
                    "400": {
                        "description": "either email or code is not matched"
                    }
                }
            }
        },
        "/vendor": {
            "post": {
                "tags": [
                    "vendor"
                ],
                "description": "register vendor",
                "operationId": "createVendor",
                "requestBody": {
                    "description": "Created vendor object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Vendor"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Vendor"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/vendor/login": {
            "post": {
                "tags": [
                    "vendor"
                ],
                "description": "Logs vendor into the system",
                "operationId": "loginVendor",
                "parameters": [],
                "requestBody": {
                    "description": "login vendor object",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserLogin"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json":{}
                        }
                    },
                    "400": {
                        "description": "Invalid email/password supplied"
                    },
                    "404" :{
                        "description":"email not found"
                    }
                }
            }
        },
        "/vendor/email/verify/{token}": {
            "get": {
                "tags": [
                    "vendor"
                ],
                "description": "Verify vendor email with token which is send to your email",
                "operationId": "verifyVendorEmail",
                "parameters": [
                    {
                        "name": "token",
                        "in": "path",
                        "description": "extract the token from the link which is send to your email this token is valid for 5 min.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid token"
                    },
                    "404": {
                        "description": "something went wrong"
                    }
                }
            }
        },
        "/vendor/forgot-password/{email}": {
            "post": {
                "tags": [
                    "vendor"
                ],
                "description": "send the reset-password link to the vendor email.",
                "operationId": "vendor1-reset-password",
                "parameters": [
                    {
                        "name": "email",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "reset-password link sent successfully"
                    },
                    "400": {
                        "description": "reset-password link not sent"
                    },
                    "404": {
                        "description": "User with this email not exists"
                    }
                }
            }
        },
        "/vendor/reset-password-new/{token}": {
            "post": {
                "tags": [
                    "vendor"
                ],
                "description": "send the reset-password link to the vendor email.",
                "operationId": "venddor-reset-password-confirm",
                "parameters": [
                    {
                        "name": "token",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "new password",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                          
                                    "newPassword": {
                                        "type": "string",
                                        "example": "123456"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "reset-password  successfully"
                    },
                    "400": {
                        "description": "Unable to reset password. something went wrong"
                    },
                    "404": {
                        "description": "User with this email not exists"
                    }
                }
            }
        },
        "/vendor/change-password": {
            "post": {
                "tags": [
                    "vendor"
                ],
                "description": "send the reset-password link to the vendor email.",
                "operationId": "vendor-change-password",
                "requestBody": {
                    "description": "change password , old password should be matched",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/changePassword"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password changed successfully"
                    },
                    "400": {
                        "description": "Unable to change password. something went wrong"
                    },
                    "404": {
                        "description": "User with this email not exists"
                    }
                }
            }
        },
        "/vendors": {
            "get": {
                "tags": [
                    "vendor"
                ],
                "description": "List all service provider only for admin",
                "operationId": "listServiceProvider",
                "responses": {
        
                    "200": {
                        "description": "request successfull"
                    },
                    "400": {
                        "description": "something went wrong"
                    }
                },
                "security": [
                    {
                        "adminToken": []
                    }
                  ]
            }
        },
        "/wallet": {
            "post": {
                "tags": [
                    "wallet"
                ],
                "description": "create wallet for user",
                "operationId": "createWallet",
                "parameters": [],
                "requestBody": {
                    "description": "enter userId here which you got from list-user.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                          
                                    "userId": {
                                        "type": "string",
                                        "example": "123456"
                                    }
                                },
                                "required":true
                            }
                        }
                    }
                    },
                
                "responses": {
                    "200": {
                        "description": "wallet created successfully"
                    },
                    "400": {
                        "description": "missing userId from the body"
                    },
                    "500" :{
                        "description":"internal server error"
                    }
                }
            }
        },
        "/wallets/list/{userId}": {
            "get": {
                "tags": [
                    "wallet"
                ],
                "description": "get the wallet detail for the userId",
                "operationId": "get-wallet-details",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "request successfull"
                    },
                    "400": {
                        "description": "The path parameter userId is required."
                    },
                    "404": {
                        "description": "error occured while fetching the wallet table."
                    }
                }
            }
        },
        "/asset": {
            "post": {
                "tags": [
                    "asset"
                ],
                "description": "register asset",
                "operationId": "createAsset",
                "requestBody": {
                    "description": "Created asset object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Asset"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Asset"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/assets/list/{userId}": {
            "get": {
                "tags": [
                    "asset"
                ],
                "description": "get all the assets for the userId",
                "operationId": "get-user-assets",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "request successfull"
                    },
                    "400": {
                        "description": "The path parameter userId is required."
                    },
                    "404": {
                        "description": "error occured while fetching the assets table."
                    }
                }
            }
        }
    },
    
    "components": {
        "schemas": {
            "User": {
                "type": "object",
                "properties": {

                    "firstName": {
                        "type": "string",
                        "example": "John"
                    },
                    "lastName": {
                        "type": "string",
                        "example": "James"
                    },
                    "email": {
                        "type": "string",
                        "example": "john@email.com"
                    },
                    "password": {
                        "type": "string",
                        "example": "12345"
                    }
                },
                "required": [
                    "password",
                    "email"
                  ]
            },
            "UserLogin": {
                "type": "object",
                "properties": {
          
                    "email": {
                        "type": "string",
                        "example": "gurpreet.xpertiks@gmail.com"
                    },
                    "password": {
                        "type": "string",
                        "example": "123456"
                    }
                }
            },
            "changePassword": {
                "type": "object",
                "properties": {
          
                    "email": {
                        "type": "string",
                        "example": "gurpreet.xpertiks@gmail.com"
                    },
                    "oldPassword": {
                        "type": "string",
                        "example": "123456"
                    },
                    "newPassword": {
                        "type": "string",
                        "example": "123456"
                    }
                }
            },
            "ServiceProvider":{
                "type": "object",
                "properties": {

                    "providerName": {
                        "type": "string",
                        "example": "paypal"
                    },
                    "category": {
                        "type": "string",
                        "example": "online payment"
                    },
                    "icon": {
                        "type": "string",
                        "example": "https://cdn-icons-png.flaticon.com/512/1332/1332708.png"
                    },
                    "symbol": {
                        "type": "string",
                        "example": ""
                    }
                },
                "required": [
                    "providerName",
                    "category",
                    "icon"
                  ]
            },
            "PaymentCategory":{
                "type": "object",
                "properties": {
                    "category": {
                        "type": "string",
                        "example": "online payment"
                    },
                    "icon": {
                        "type": "string",
                        "example": "https://cdn-icons-png.flaticon.com/512/1332/1332708.png"
                    }
                },
                "required": [
                    "category",
                    "icon"
                  ]
            },
            "Trade":{
                "type": "object",
                "properties": {
                    "username": {
                        "type": "string",
                        "example": "ragnar"
                    },
                    "paymentMethodCategory": {
                        "type": "string",
                        "example": "online payment"
                    },
                    "price": {
                        "type": "integer",
                        "format": "int64",
                        "example": 0.0
                    },
                    "currency": {
                        "type": "string",
                        "example": "btc"
                    },
                    "type": {
                        "type": "string",
                        "example": "sell",
                        "enum": [
                            "sell",
                            "buy"
                        ]
                    },
                    "location": {
                        "type": "string",
                        "example": "india"
                    },
                    "avgTime":{
                        "type": "string",
                        "example": "date-time"
                    }
                },
                "required": [
                    "username",
                    "paymentMethodCategory",
                    "paymentMethod",
                    "price",
                    "currency",
                    "type",
                    "location",
                    "avgTime"
                  ]
            },
            "Notification":{
                "type": "object",
                "properties": {
                    "phoneNumber": {
                        "type": "string",
                        "example": "xxxxx-xxxxx"
                    },
                    "email": {
                        "type": "string",
                        "example": "your@email.com",
                        "description":"you should register first"

                    }
                },
                "required": [
                    "phoneNumber",
                    "email"
                  ]
            },
            "VerifyOTP":{
                "type": "object",
                "properties": {
                    "phoneNumber": {
                        "type": "string",
                        "example": "xxxxx-xxxxx"
                    },
                    "email": {
                        "type": "string",
                        "example": "your@email.com",
                        "description":"you should register first"

                    },
                    "code": {
                        "type": "integer",
                        "format": "int64"

                    }
                },
                "required": [
                    "phoneNumber",
                    "email",
                    "code"
                  ]
            },
            "Vendor": {
                "type": "object",
                "properties": {

                    "firstName": {
                        "type": "string",
                        "example": "John"
                    },
                    "lastName": {
                        "type": "string",
                        "example": "James"
                    },
                    "email": {
                        "type": "string",
                        "example": "john@email.com"
                    },
                    "password": {
                        "type": "string",
                        "example": "12345"
                    }
                },
                "required": [
                    "password",
                    "email",
                    "firstName",
                    "lastName"
                  ]
            },
            "Asset": {
                "type": "object",
                "properties": {

                    "userId": {
                        "type": "string",
                        "example": "asdfjk212"
                    },
                    "balance": {
                        "type": "string",
                        "example": "20"
                    },
                    "assetName": {
                        "type": "string",
                        "example": "Tether"
                    },
                    "symbol": {
                        "type": "string",
                        "example": "tet"
                    },
                    "address": {
                        "type": "string",
                        "example": "0x15645"
                    }
                },
                "required": [
                    "userId",
                    "balance",
                    "assetName",
                    "symbol"
                  ]
            }
        },
        "requestBodies": {
            "UserArray": {
                "description": "List of user object",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    }
                }
            }
        },
        "securitySchemes": {
            "api_key": {
                "type": "apiKey",
                "name": "api_key",
                "in": "header"
            },
              "adminToken": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
              },
              "userToken": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
              }
        }
    }
}