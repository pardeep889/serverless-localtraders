# org: rajatdua
# app: aws-node-http-api-project
service: user-service
frameworkVersion: "3"

custom:
  tableName: "User"

provider:
  name: aws
  runtime: nodejs14.x
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - Fn::GetAtt: [UsersTable, Arn]
            - arn:aws:dynamodb:us-east-1:945677977841:table/Wallet
            - arn:aws:dynamodb:us-east-1:945677977841:table/Asset


  environment:
    USERS_TABLE: User
Type: AWS::Logs::LogGroup
Properties:
  DataProtectionPolicy: Json
  KmsKeyId: String
  LogGroupName: String
  RetentionInDays: Integer
  Tags:
    - Tag

functions:
  create-user:
    handler: create.handler
    events:
      - httpApi:
          path: /user
          method: post
  update-user:
    handler: update.handler
    events:
      - httpApi:
          path: /user/{id}
          method: put
  delete-user:
    handler: delete.handler
    events:
      - httpApi:
          path: /user/{id}
          method: delete
  get-user:
    handler: get.handler
    events:
      - httpApi:
          path: /user/{id}
          method: get
  list-users:
    handler: list.handler
    events:
      - httpApi:
          path: /users
          method: get
  login:
    handler: authenticate.handler
    events:
      - httpApi:
          path: /users/login
          method: post

  login-confirm:
    handler: authenticate-confirm.handler
    events:
      - httpApi:
          path: /users/login/verify
          method: post

  email-verify:
    handler: verify-email.handler
    events:
      - httpApi:
          path: /user/email/verify/{token}
          method: get
  
  reset-password:
    handler: reset-password.handler
    events:
      - httpApi:
          path: /user/reset-password/{email}
          method: post

  reset-password-confirm:
    handler: reset-password-confirm.handler
    events:
      - httpApi:
          path: /user/reset-password-confirm/{token}
          method: post

  refresh-token:
    handler: refresh-token.handler
    events:
      - httpApi:
          path: /users/refresh
          method: post

  change-password:
    handler: change-password.handler
    events:
      - httpApi:
          path: /user/change-password
          method: post

resources:
  Resources:
    UsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: User
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: email
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
          - AttributeName: email
            KeyType: RANGE

        ProvisionedThroughput:
          ReadCapacityUnits: 3
          WriteCapacityUnits: 3

plugins:
  - serverless-offline