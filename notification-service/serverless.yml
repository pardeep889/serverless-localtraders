service: notification-service

provider:
    name: aws
    runtime: nodejs14.x
    stage: ${file(../serverless-config.json):stage}
    region: ${file(../serverless-config.json):region}
    iamRoleStatements:
        - Effect: Allow
          Action:
              - sns:SetSMSAttributes
              - sns:Publish
              - dynamodb:Query
              - dynamodb:Scan
              - dynamodb:GetItem
              - dynamodb:PutItem
              - dynamodb:UpdateItem
              - dynamodb:DeleteItem
          Resource: '*'

functions:
    sendSMS:
        handler: lambdas/endpoints/sendSMS.handler
        events:
            - http:
                  path: send-sms
                  method: POST
                  cors: true

    verifySMS:
        handler: lambdas/endpoints/verifySMS.handler
        events:
            - http:
                  path: verify-sms
                  method: POST
                  cors: true
    store-ip-address: 
        handler: lambdas/IP/handle.storeIPAddress
        events:
            - http:
                path: ip-info
                method: POST
                cors: true

resources:
  Resources:
    IPAddressTableStore:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: IPAddressTableStore
        AttributeDefinitions:
          - AttributeName: ipAddress
            AttributeType: S
        KeySchema:
          - AttributeName: ipAddress
            KeyType: HASH

        ProvisionedThroughput:
          ReadCapacityUnits: 3
          WriteCapacityUnits: 3

plugins:
  - serverless-offline