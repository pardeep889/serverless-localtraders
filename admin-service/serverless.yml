# org: rajatdua
# app: aws-node-http-api-project
service: admin-service
frameworkVersion: "3"

custom:
  tableName: "AdminUser"

provider:
  name: aws
  runtime: nodejs14.x
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - Fn::GetAtt: [AdminTable, Arn]
            - Fn::GetAtt: [PaymentMethod, Arn]
            - Fn::GetAtt: [PaymentCategory, Arn]
            - arn:aws:dynamodb:us-east-1:945677977841:table/UserTable

              
            
  environment:
    USERS_TABLE: AdminUser
Type: AWS::Logs::LogGroup
Properties:
  DataProtectionPolicy: Json
  KmsKeyId: String
  LogGroupName: String
  RetentionInDays: Integer
  Tags:
    - Tag

functions:
  create-user:
    handler: create.handler
    events:
      - httpApi:
          path: /admin
          method: post
  update-user:
    handler: update.handler
    events:
      - httpApi:
          path: /admin/{userId}
          method: put
  delete-user:
    handler: delete.handler
    events:
      - httpApi:
          path: /admin/{userId}
          method: delete
  get-user:
    handler: get.handler
    events:
      - httpApi:
          path: /admin/{userId}
          method: get
  list-users:
    handler: list-users.handler
    events:
      - httpApi:
          path: /admin/list-users
          method: get
  login:
    handler: authenticate.handler
    events:
      - httpApi:
          path: /admin/login
          method: post

  create-paymentMethod :
    handler: create-paymentMethod.handler
    events:
      - httpApi:
          path: /admin/payment-method/create
          method: post

  get-paymentMethod:
    handler: get-payment-methods.handler
    events:
      - httpApi:
          path: /admin/payment-method
          method: get        

  create-payment-category :
    handler: create-payment-category.handler
    events:
      - httpApi:
          path: /admin/payment-category
          method: post

  list-payment-category :
    handler: list-payment-category.handler
    events:
      - httpApi:
          path: /admin/payment-category
          method: get


resources:
  Resources:
    AdminTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: AdminUser
        AttributeDefinitions:
          - AttributeName: uid
            AttributeType: S
        KeySchema:
          - AttributeName: uid
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 3
          WriteCapacityUnits: 3

    PaymentMethod:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        TableName: 'PaymentMethod'
        AttributeDefinitions:
          - AttributeName: 'category'
            AttributeType: 'S'
          - AttributeName: 'provider'
            AttributeType: 'S'
        KeySchema:
          - AttributeName: 'category'
            KeyType: 'HASH'
          - AttributeName: 'provider'
            KeyType: 'RANGE'
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5

    PaymentCategory:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        TableName: 'PaymentCategory'
        AttributeDefinitions:
          - AttributeName: 'category'
            AttributeType: 'S'
        KeySchema:
          - AttributeName: 'category'
            KeyType: 'HASH'
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
          

plugins:
  - serverless-offline